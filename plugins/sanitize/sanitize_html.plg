<?php
require('htmLawed.php');
class SanitizeHtml extends BasePlugin {
	var $logger;
	var $settings;
   
	function SanitizeHtml(){
        $this->logger =& LoggerManager::getLogger('SanitizeHtml');
    }

    public function onLoad(&$settings) {
		$this->settings = $settings;
		$this->logger->debug("Settings ".print_r($this->settings, true));
	}
	
	public function handleMessage(&$messageDetails) {
		$cfg = array(
			'anti_link_spam'=> array('`.`', '`.`'),
			'anti_mail_spam'=> 'NO@SPAM',
			'balance'=>1,
			'cdata'=>2,
			'clean_ms_char'=>0,
			'comment'=>1,
			'css_expression'=>0,
			'deny_attribute'=>0,
			'elements'=>'* -img',
			'hexdec_entity'=>1,
			'keep_bad'=>6,
			'lc_std_val'=>1,
			'make_tag_strict'=>2,
			'named_entity'=>0,
			'no_deprecated_attr'=>2,
			'parent'=>'div',
			'safe'=>1,
			'schemes'=>'href: aim, feed, file, ftp, gopher, http, https, irc, mailto, news, nntp, sftp, ssh, telnet; *:file, http, https',
			'tidy'=> -1,
			'unique_ids'=>1,
			'valid_xhtml'=>1
		);

		if (isset($messageDetails['mail_body'])) {
		    $mailBody = $messageDetails['mail_body'];
			if (isset($mailBody['html'])) {
				$htmlMessages = $mailBody['html'];
				foreach($htmlMessages as $id => $htmlMessage) {
				   $htmlMessages[$id] = htmLawed($htmlMessage, $this->settings); 
				}
				$mailBody['html'] = $htmlMessages;
			} else {
				$this->logger->error("Message doesn't have html content");
			}
		} else {
			$this->logger->error("Couldn't find email object");
		}
	    
	}
}
?>